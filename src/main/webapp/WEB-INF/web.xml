<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="schedule-console" version="3.0">
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<display-name>jordan-platform</display-name>
	<description>数字化管理平台</description>

	<context-param>
		<description>配置spring容器的路径</description>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:spring/spring-applicationContext.xml,
			classpath:spring/spring-mybatis.xml,
			classpath:spring/spring-shiro.xml
		</param-value>
	</context-param>

	<filter>
		<description>字符编码过滤</description>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<description>logbackMDC过滤</description>
		<filter-name>MDCInsertingServletFilter</filter-name>
		<filter-class>ch.qos.logback.classic.helpers.MDCInsertingServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MDCInsertingServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<description>
			安全权限过滤。DelegatingFilterProxy作用是自动到spring容器查找名字为
		    shiroFilter（filter-name）的bean并把所有Filter的操作委托给它
		</description>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- <filter>
		<description>Request过滤</description>
		<filter-name>requestFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.RequestFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>requestFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping> -->

	<filter>
		<description>Session过滤</description>
		<filter-name>SessionFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.SessionFilter</filter-class>
		<init-param>
			<description>将当前登录的用户的信息保存在 session 中时使用的key，如果没有配置此参数，则该过滤器不起作用</description>
			<param-name>sessionKey</param-name>
			<param-value>userInfo</param-value>
		</init-param>
		<init-param>
			<description>
         		 如果用户未登录（即在 session 中 key 为 sessionKey 的属性不存在或为空），则将请求重定向到该 url。
         		 该 url 不包含web应用的 ContextPath。
         		 如果不配置此参数，则在用户未登录系统的情况下，直接重定向到web应用的根路径（/）
     		</description>
			<param-name>redirectUrl</param-name>
			<param-value>/login.jsp</param-value>
		</init-param>
		<init-param>
			<description>
		         不需要进行拦截的 url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
		         此参数的值一般为 loginServlet 和 registServlet 等。
		         另外，参数 redirectUrl 的值不用包含在该正则表达式中，因为 redirectUrl 对应的 url 会被自动放行。
		         还有一点需要说明的是，该参数的值不包含web应用的 ContextPath。
		         不拦截 /servlets/loginServlet 和 /servlets/registServlet 
		     </description>
			<param-name>excepUrlRegex</param-name>
			<param-value>/servlets/(login|regist)Servlet</param-value>
		</init-param>
	</filter>
	
	<filter>
		<description>用户过滤器</description>
		<filter-name>userFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.UserFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>userFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<description>Ajax过滤</description>
		<filter-name>ajaxFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.AjaxFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ajaxFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<description>跨域过滤</description>
		<filter-name>corsFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.CorsFilter</filter-class>
		<async-supported>true</async-supported>
	</filter>
	<filter-mapping>
		<filter-name>corsFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- <filter>
		<description>敏感词过滤</description>
		<filter-name>StopWordsFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.StopWordsFilter</filter-class>
		<init-param>
			<description>需要禁用的关键字，一个关键字占一行</description>
			<param-name>keys</param-name>
			<param-value> QQ 百度 七一五 </param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>StopWordsFilter</filter-name>
		<servlet-name>*.jsp</servlet-name>
	</filter-mapping> -->

	<!-- <filter>
		<description>禁止黑名单网站访问</description>
		<filter-name>BannedAccessFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.BannedAccessFilter</filter-class>
		<init-param>
			<description>需要禁用的站点，一个站点占用一行</description>
			<param-name>bannedSites</param-name>
			<param-value> 192.168.1.101 192.168.1.102 www.csdn.net </param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>BannedAccessFilter</filter-name>
		<url-pattern>／*</url-pattern>
	</filter-mapping> -->

	<!-- <filter>
		<description>设置不使用缓存的过滤器配置</description>
		<filter-name>ClearCacheFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.ClearCacheFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ClearCacheFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ClearCacheFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping> -->

	<!-- <filter>
		<description>压缩过滤器</description>
		<filter-name>CompressionFilter</filter-name>
		<filter-class>org.safari.platform.common.filter.CompressionFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CompressionFilter</filter-name>
		<servlet-name>/</servlet-name>
	</filter-mapping> -->

	<servlet>
		<servlet-name>PropertiesServlet</servlet-name>
		<servlet-class>org.safari.platform.common.servlet.PropertiesServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>PropertiesServlet</servlet-name>
		<url-pattern>/servlet/properties</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>SpringServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring/spring-dispatcher.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- <servlet>
		<servlet-name>ModelRestServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring-mvc-modeler.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>ModelRestServlet</servlet-name>
		<url-pattern>/service/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>RestServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring-mvc-rest.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>RestServlet</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping> -->

	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>kaptcha</servlet-name>
		<url-pattern>/static/images/kaptcha.jpg</url-pattern>
	</servlet-mapping>
	
   <servlet>
    <servlet-name>DisplayChart</servlet-name>
    <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>DisplayChart</servlet-name>
    <url-pattern>/DisplayChart</url-pattern>
  </servlet-mapping>


	<listener>
		<description>spring监听器</description>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<description>Introspector缓存清除监听器</description>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	
	<listener>
		<description>系统初始化监听器</description>
		<listener-class>org.safari.platform.common.listener.InitListener</listener-class>
	</listener>

	<!-- session有效期 -->
	<session-config>
		<session-timeout>20</session-timeout>
	</session-config>

	<!-- 异常处理 -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/error/404.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/error/403.jsp</location>
	</error-page>
</web-app>